version: '3.8'
services:
  nifi:
    image: apache/nifi:1.24.0

    entrypoint: [ "bash", "-c" ]
    command: >
      "
        echo '==> init-nifi.sh will run in 80s...' &&
        /opt/nifi/scripts/start.sh &    # arranca NiFi en background
        sleep 80 &&
        echo '==> Executing init-nifi.sh now...' &&
        bash -x /opt/nifi/init/init-nifi.sh &&
        wait
      "

    ports:
      - "8443:8443"
      - "8080:8080"
      - "8081:8081"
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_WEB_HTTPS_PORT=8443
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB
    volumes:
      - nifi_flowfile_repo:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content_repo:/opt/nifi/nifi-current/content_repository
      - nifi_provenance_repo:/opt/nifi/nifi-current/provenance_repository
      - ./nifi/templates:/opt/nifi/nifi-current/templates:ro
      - ./nifi/init:/opt/nifi/init
    healthcheck:
      test: ["CMD-SHELL","curl -fs http://localhost:8080/nifi-api/system-diagnostics || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 180s

  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password123
      - DOCKER_INFLUXDB_INIT_ORG=myorg
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken123456789
    volumes:
      - influxdb_data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s

  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/init:/etc/grafana/init
    depends_on:
      influxdb:
        condition: service_healthy
    command: >
      bash -c "
        /etc/grafana/init/wait-for-influx.sh &&
        /run.sh
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  data-generator:
    build: ./python
    depends_on:
      nifi:
        condition: service_healthy
    volumes:
      - ./python:/app
    command: >
      bash -c "
        echo 'Starting data generator...' &&
        python /app/data_generator.py
      "
    restart: unless-stopped

volumes:
  nifi_data:
  nifi_logs:
  nifi_flowfile_repo:
  nifi_database_repo:
  nifi_content_repo:
  nifi_provenance_repo:
  influxdb_data:
  grafana_data: